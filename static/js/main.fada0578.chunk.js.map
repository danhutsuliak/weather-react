{"version":3,"sources":["components/daily-weather-card/daily-weather-card.component.jsx","components/daily-weather/daily-weather.component.jsx","components/modal/modal.component.jsx","components/currrent-weather/current-weather.component.jsx","App.js","reportWebVitals.js","components/header/header.component.jsx","components/footer/footer.componet.jsx","index.js"],"names":["DailyWeatherCard","date","imgSrc","degree","text","className","src","alt","DailyWeather","daily","cards","i","Date","dt","toDateString","push","slice","weather","icon","Math","round","temp","max","description","toUpperCase","Modal","isShown","id","style","display","CurrentWeather","current","imageSrc","weatherDesc","App","API_Key","units","state","isModalShown","modalText","coords","a","fetch","lat","lon","this","response","ok","Error","json","data","error_message","console","log","navigator","geolocation","getCurrentPosition","successResult","coordinates","latitude","longitude","getWeather","setState","error","message","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","Footer","href","target","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fada0578.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './daily-weather-card.styles.scss';\r\n\r\nconst DailyWeatherCard = ({ date, imgSrc, degree, text }) => (\r\n  <div className=\"card\">\r\n    <p className=\"date\">{date}</p>\r\n    <img src={imgSrc} alt=\"cloudy\" className=\"daily-img\" />\r\n    <p className=\"degree\">{degree}</p>\r\n    <p className=\"text\">{text}</p>\r\n  </div>\r\n);\r\n\r\nexport default DailyWeatherCard;\r\n","import React from 'react';\r\nimport DailyWeatherCard from '../daily-weather-card/daily-weather-card.component';\r\n\r\nimport './daily-weather.styles.scss';\r\n\r\nconst DailyWeather = ({ daily }) => {\r\n  if (!daily) {\r\n    return <div></div>;\r\n  }\r\n\r\n  let cards = [];\r\n\r\n  for (let i = 0; i < 8; i++) {\r\n    const date = new Date(daily[i].dt * 1000).toDateString();\r\n\r\n    cards.push(\r\n      <DailyWeatherCard\r\n        key={i}\r\n        date={date.slice(0, 3) + date.slice(7, 10)}\r\n        imgSrc={`http://openweathermap.org/img/w/${daily[i].weather[0].icon}.png`}\r\n        degree={Math.round(daily[i].temp.max) + '°'}\r\n        text={\r\n          daily[i].weather[0].description[0].toUpperCase() +\r\n          daily[i].weather[0].description.slice(1)\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"daily\">\r\n      <h2>Daily</h2>\r\n      <div className=\"card-wrapper\">\r\n        <div className=\"cards\">{cards}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyWeather;\r\n","import React from 'react';\r\n\r\nimport './modal.styles.scss';\r\n\r\nconst Modal = ({ text, isShown }) => {\r\n  return (\r\n    <div id=\"myModal\" className=\"modal\" style={{ display: isShown && 'block' }}>\r\n      <div className=\"modal-content\">\r\n        <p>{text}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\n\r\nimport './current-weather.styles.scss';\r\n\r\nconst CurrentWeather = ({ current }) => {\r\n  if (!current) {\r\n    return <div></div>;\r\n  }\r\n\r\n  const degree = Math.round(current.temp) + '°';\r\n  const imageSrc = `http://openweathermap.org/img/w/${current.weather[0].icon}.png`;\r\n  const weatherDesc =\r\n    current.weather[0].description[0].toUpperCase() +\r\n    current.weather[0].description.slice(1);\r\n\r\n  return (\r\n    <div className=\"weather\">\r\n      <h2 id=\"place\">Chernivtsi</h2>\r\n      <div className=\"weather-value-container\">\r\n        <img className=\"main-img\" src={imageSrc} alt=\"sunny\" />\r\n        <p className=\"degree\">{degree}</p>\r\n        <div className=\"cel-fahr-container\">\r\n          <p className=\"celsius\">C</p>\r\n          <p className=\"fahrenheit\">F</p>\r\n        </div>\r\n      </div>\r\n      <h2 className=\"weather-desc\">{weatherDesc}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentWeather;\r\n","import React from 'react';\nimport './App.css';\nimport DailyWeather from './components/daily-weather/daily-weather.component';\nimport Modal from './components/modal/modal.component';\nimport CurrentWeather from './components/currrent-weather/current-weather.component';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      weather: {},\n      isModalShown: true,\n      modalText: 'Please Wait...'\n    }\n  }\n\n  API_Key = '19ffda1a93323f52e689caab91528bf8';\n  units = 'metric';\n\n  async getWeather(coords) {\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${coords.lat}&lon=${coords.lon}&exclude=minutely,hourly,alerts&appid=${this.API_Key}&units=${this.units}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch coordinates. Please try again!')\n    }\n    const data = await response.json();\n    if (data.error_message) {\n      throw new Error(data.error_message);\n    }\n    console.log(data);\n    return data;\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(\n      async (successResult) => {\n        const coordinates = {\n          lat: successResult.coords.latitude,\n          lon: successResult.coords.longitude\n        }\n        this.setState({\n          weather: await this.getWeather(coordinates)\n        })\n        this.setState({ isModalShown: false });\n      },\n      error => {\n        this.setState({ modalText: 'Error! ' + error.message })\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Modal isShown={this.state.isModalShown} text={this.state.modalText} />\n        <CurrentWeather current={this.state.weather.current} />\n        <DailyWeather daily={this.state.weather.daily} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nimport './header.styles.scss';\r\n\r\nconst Header = () => (\r\n  <header className=\"header\">\r\n    <h1 className=\"title\">Weather App</h1>\r\n    {/* <div class=\"btn\"></div> */}\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport './footer.styles.scss';\r\n\r\nconst Footer = () => (\r\n  <footer>\r\n    <a\r\n      className=\"title\"\r\n      href=\"https://github.com/danhutsuliak\"\r\n      target=\"_blank\"\r\n      rel=\"noreferrer\"\r\n    >\r\n      @danhutsuliak\r\n    </a>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Header from './components/header/header.component';\nimport Footer from './components/footer/footer.componet';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <App />\n    <Footer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}